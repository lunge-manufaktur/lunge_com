$(function() {

  /* Build new ShopifyBuy client
  ============================================================ */
  var client = ShopifyBuy.buildClient({
    accessToken: '<%= ENV['SHOPIFY_ACCESS_TOKEN'] %>', // Your SDK API/access token 
    domain: 'b2b.lunge.com', // Your complete Shopify store domain
    appId: '6'
  });

  var product;
  var cart;
  var cartLineItemCount;

  //discontineud products
  var discontinuedProducts = [
    'Classic Run S (Grün/Weiß)',
    'Classic Run S (Rot/Weiß)',
    'Classic Run S (Royal/Weiß)',
    'Classic Run S (Schwarz/Weiß)',
    'Classic Run S (Yellow/Lawn Green/Light Gray)',
    'Classic Run S Fis (Anthrazit/Blau/Weiß)',
    'Classic Run S Fis W (Anthrazit/Blau/Weiß)',
    'Classic Run S W (Grün/Weiß)',
    'Classic Run S W (Rot/Weiß)',
    'Classic Run S W (Royal/Weiß)',
    'Classic Run S W (Schwarz/Weiß)',
    'Classic Run S W (Yellow/Lawn Green/Light Gray)',
    'Classic Walk S (Anthrazit/Hellgrau)',
    'Classic Walk S (Anthrazit/Schwarz)',
    'Classic Walk S (Caramel/Hellgrau)',
    'Classic Walk S (Glatt/Schwarz)',
    'Classic Walk S (Glatt/Weiß)',
    'Classic Walk S (Marine/Hellgrau)',
    'Classic Walk S (Marine/Schwarz)',
    'Classic Walk S (Schwarz/Hellgrau)',
    'Classic Walk S (Schwarz/Schwarz)',
    'Classic Walk S (Silber/Hellgrau)',
    'Classic Walk S (Brown / Lakritze) (Limited Edition)',
    'Classic Walk S W (Anthrazit/Hellgrau)',
    'Classic Walk S W (Anthrazit/Schwarz)',
    'Classic Walk S W (Blackberry/Light Gray) (Limited Edition)',
    'Classic Walk S W (Caramel/Hellgrau)',
    'Classic Walk S W (Glatt/Schwarz)',
    'Classic Walk S W (Glatt/Weiß)',
    'Classic Walk S W (Marine/Hellgrau)',
    'Classic Walk S W (Marine/Schwarz)',
    'Classic Walk S W (Schwarz/Hellgrau)',
    'Classic Walk S W (Schwarz/Schwarz)',
    'Classic Walk S W (Silber/Hellgrau)',
    'Evo Run (Grün/Weiß/Grün)',
    'Evo Run W (Grün/Weiß/Grün)',
    'Feetality (Rot / Glatt)',
    'Feetality (Schwarz / Glatt)',
    'Integer Run Rebound (Dark Slate Blue/Navy/White)',
    'Integer Run Rebound (Deep Sky Blue/Light Gray/White)',
    'Integer Run Rebound (Lakritze/Gray)',
    'Integer Run Rebound W (Deep Sky Blue/Light Gray/White)',
    'Integer Run Rebound W (Lakritze/Gray)',
    'Integer Run Rebound W (Light Pink/Light Gray/White)',
    'Integer Run Rebound W (Nickel/Aquamarine/White)',
    'Integer Walk Cushion (Lakritze)',
    'Integer Walk Cushion (Olive/Green/Gray)',
    'Integer Walk Cushion (Slate/Gray)',
    'Integer Walk Cushion W (Lakritze)',
    'Integer Walk Cushion W (Olive/Green/Gray)',
    'Integer Walk Cushion W (Slate/Gray)',
    'Integer Walk Rebound (Black/Smooth)',
    'Integer Walk Rebound (Cornflower Blue/Navy/White)',
    'Integer Walk Rebound (Dark Gray/Wheat/Gray)',
    'Integer Walk Rebound (Lakritze/Gray)',
    'Integer Walk Rebound (Silver/Snow/White)',
    'Integer Walk Rebound (White/Smooth)',
    'Integer Walk Rebound Leder (Espresso/Gray)',
    'Integer Walk Rebound Leder (Lakritze/Gray)',
    'Integer Walk Rebound Leder (Saddle Brown/White)',
    'Integer Walk Rebound Leder (Whitesmoke/White)',
    'Integer Walk Rebound Leder W (Espresso/Gray)',
    'Integer Walk Rebound Leder W (Lakritze/Gray)',
    'Integer Walk Rebound Leder W (Saddle Brown/White)',
    'Integer Walk Rebound Leder W (Whitesmoke/White)',
    'Integer Walk Rebound W (Black/Smooth)',
    'Integer Walk Rebound W (Cornflower Blue/Navy/White)',
    'Integer Walk Rebound W (Dark Gray/Hot Pink/Gray)',
    'Integer Walk Rebound W (Lakritze/Gray)',
    'Integer Walk Rebound W (Silver/Red/White)',
    'Integer Walk Rebound W (White/Smooth)',
    'Neo Run (Lakritz)',
    'Neo Run (Light Gray/Black)',
    'Neo Run (Light Gray/Dark Orange)',
    'Neo Run (Midnightblue/Aquamarine)',
    'Neo Run (Midnightblue/Navy)',
    'Neo Run (Pflanze/Magnesium/Silber)',
    'Neo Run (Quecksilber/Schnee/Silber)',
    'Neo Run W (Champagne/Violet)',
    'Neo Run W (Deep Pink/Violet)',
    'Neo Run W (Lakritz)',
    'Neo Run W (Lime/Aquamarine)',
    'Neo Run W (Pflanze/Magenesium/Silber)',
    'Neo Run W (Quecksilber/Schnee/Silber)',
    'Neo Run W (Skyblue/Cobalt)',
    'Neo Walk (Lakritze)',
    'Neo Walk (Steelblue/Marine)',
    'Neo Walk W (Ivory/Champagne)',
    'Neo Walk W (Lakritze)'
  ]

  var estimatedDeliveryDates = {
  }
  
  //grab collection ID from div.collection#collection-id in HTML
  var collection = $('.gender-select').val();
  
  // check for existing cart in local storage, if one doesn't exist
  // create new cart object
  if(localStorage.getItem('lastCartId')) {
    client.fetchCart(localStorage.getItem('lastCartId')).then(function(remoteCart) {
      cart = remoteCart;
      cartLineItemCount = cart.lineItems.length;
      renderCartItems();
      updateCartTabButton();
    });
  } else {
    client.createCart().then(function (newCart) {
      cart = newCart;
      localStorage.setItem('lastCartId', cart.id);
      cartLineItemCount = 0;
      updateCartTabButton();
    });
  }

  var previousFocusItem;





  bindEventListeners();

  if (collection !== undefined) {
    getProducts(collection);
  }

  /* get products */
  function getProducts(collection) {
    client.fetchQueryProducts({collection_id: collection, sort_by: 'collection-default' }).then(function(products) {
      disableAddToCartButton();

      var product = products[0];
      var selectedVariantName = $('.variant-select option:selected').text().replace(/○ |● /, '');
      console.log('getProducts: ' + selectedVariantName);
      var productSelectHTML = generateProductSelectors(products);
      var variantSelectHTML = generateVariantSelectors(product.variants, selectedVariantName);

      $('.product-select__container').html(productSelectHTML);
      $('.variant-select').html(variantSelectHTML);

      updateProductData();
    });
  }


  // get variants
  function getVariants(product) {
    client.fetchProduct(product).then(function(product) {
      disableAddToCartButton();

      var product = product;
      var selectedVariantName = $('.variant-select option:selected').text().replace(/○ |● /, '');
      console.log('getVariants: ' + selectedVariantName);
      var variantSelectHTML = generateVariantSelectors(product.variants, selectedVariantName);

      $('.variant-select').html(variantSelectHTML);

      updateProductData();
    });
  }


  // update product image
  function updateProductImage(selectedVariant) {
    var productImageURL = selectedVariant.image.src
    var productTitle = selectedVariant.productTitle

    // $('.product__image-container').html('<img src="' + productImageURL + '" class="product__image" alt="' + productTitle + '">');

    $('.product__image').attr('src', productImageURL);
    $('.product__image').attr('alt', productTitle);
  }

  // update product title
  function updateTitle(product) {
    var productTitle = product.title;

    $('.product-select__title-container').html('<span class="product-select__title">' + productTitle + '</span>');
  }


  function showSpinner() {
    var spinnerHTML = '<div class="loader"></div>';
    $('.product__spinner-overlay').html(spinnerHTML);
    $('.add-to-cart-button__container').html(spinnerHTML);
  }

  function disableAddToCartButton() {
    $('.buy-button').attr('disabled', 'disabled').text("Laden...");
    // console.log("cart disabled");
  }

  function enableAddToCartButton() {
    $('.buy-button').removeAttr('disabled');
  }



  // populate variant select box
  function generateVariantSelectors(variants, selectedVariantName) {
    var options = '';
    var selectedVariantId
    var selectedVariant = variants.find(function(el) {
      return el.title == selectedVariantName
    });
    var firstAvailableVariant = variants.find(function(el) {
      return el.available == true
    });
    
    if (selectedVariant) {
      selectedVariantId = selectedVariant.id
    } else if (firstAvailableVariant) {
      selectedVariantId = firstAvailableVariant.id
    } else {
      selectedVariantId = variants[0].id
    }
    // console.log(firstAvailableVariant);
    // console.log(selectedVariant);
    // console.log(selectedVariantId);

    // while (selectedVariantName == '' && firstAvailableVariant == null && i < variants.length) {
    //   firstAvailableVariant = variants[i].available ? variants[i].id : null;
    //   console.log(i);
    //   console.log(firstAvailableVariant);
    //   i++;
    // }

    for (var i = 0; i < variants.length; i++) {
      var disabled = variants[i].available ? false : true;
      // var selectedVariantId = selectedVariant ? selectedVariant.id : firstAvailableVariant.id;
      var selectedAttribute = selectedVariantId == variants[i].id ? 'selected' : ''; 
      var unavailableClass = disabled ? ' variant-select__option--unavailable' : '';
      var availabilityIcon = disabled ? '○' : '●';
      // if (variants[i].title == selectedVariantName) {
      //   selected = 'selected'
      // } else if (variants[i].id == firstAvailableVariant.id) {
      //   selected = 'selected'
      // } else {
      //   selected = ''
      // };
      options += '<option class="variant-select__option' + unavailableClass + '" value = "' + variants[i].id + '"' + selectedAttribute + '>' + availabilityIcon + ' ' + variants[i].title + '</option>';
    }

    return  '<select name = "variant-select" class = "variant-select">' + options + '</select>';
  }

  // populate product select box
  // function generateProductSelectors(products) {
  //   var options;
  //   for (var i = 0; i < products.length; i++) {
  //     options += '<option value = "' + products[i].id + '">' + products[i].title + '</option>';
  //   }

  //   return  '<select class="product-select" name = "product-selection">' + options + '</select>';
  // }

  // alternative product selection
  function generateProductSelectors(products) {
    var options = '';
    var selectedClass = '';
    for (var i = 0; i < products.length; i++) {
      if (i === 0) {
        selectedClass = " product-select__item--selected";
      } else {
        selectedClass = '';
      };

      options += '<a class="product-select__item' + selectedClass + '" data-product-id=' + products[i].id + ' href="#"><img src="' + products[i].images[0].src + '" title="' + products[i].title + '"></a>';
    }

    return '<div class="product-select" name="product-selection">' + options + '</div>';
  }

  function preselectProductOption() {
    var productVariantId = window.location.hash.substring(1);
    console.log(productVariantId);

    $('select.product-select').val(productVariantId);
  }



  function updateVariantPrice(selectedVariant) {
    var selectedVariant = selectedVariant;
    var formattedPrice = formatAsMoney(selectedVariant.price);
    
    $('.variant-price').text(formattedPrice);
  }


  // update add to cart button
  function updateAddToCartButton() {
    // var product = $('.product-select').val();
    var product = $('.product-select__item--selected').data("product-id");
    var variant = $('.variant-select').val();

    console.log('product: ' + product + ', variant: ' + variant);
    $('.buy-button').attr({'data-product-id': product, 'data-variant-id': variant});

    // enableAddToCartButton();
  }

  // show add to cart button
  function showAddToCartButton() {
    // var product = $('.product-select').val();
    var product = $('.product-select__item--selected').data("product-id");
    var variant = $('.variant-select').val();

    console.log('product: ' + product + ', variant: ' + variant);
    $('.add-to-cart-button__container').html(
      '<button class="buy-button js-prevent-cart-listener add-button" data-product-id=' + product + ' data-variant-id=' + variant + '>In den Warenkorb</button><div class="availability-note"><div class="availability-note__indicator"></div><div class="availability-note__text">Sofort lieferbar</div></div>'
    );

    $('.product__availability-notice--discontinued').hide();
    $('.product__availability-notice--out-of-stock').hide();
  }

  // show restock notification form
  function showRestockNotificationForm(deliveryDate) {
    var variant = $('.variant-select').val();
    var instructions = 'Diese Variante ist vorübergehend ausverkauft. Bitte Wählen Sie eine andere Farbe/Größe oder lassen Sie sich benachrichtigen sobald sie wieder verfügbar ist:'
    var deliveryDateInformation

    if (deliveryDate) {
      deliveryDateInformation = '<div class="product__availability-notice product__availability-notice--out-of-stock">Voraussichtlicher Liefertermin: ' + deliveryDate + '</div>'
    } else {
      deliveryDateInformation = ''
    }

    $('.add-to-cart-button__container').html(
      '<h4>Bald wieder verfügbar. Jetzt benachrichtigen lassen.</h4>' +
      deliveryDateInformation +
      '<p class="restock__message">' + instructions + '</p>' +
      '<form class="inline-form" id="restock-notification-form">' +
        '<input type="email" class="restock__email" placeholder="E-Mail" id="customer-email" size=15>' +
        '<input type="submit" class="restock__submit" value="OK">' +
      '</form>' +
      '<div id="restock-notification-message"></div>'
    )

    $('.product__availability-notice--discontinued').hide();
    $('.product__availability-notice--out-of-stock').show();
  }

  function showDiscontinuedNotice() {
    var instructions = 'Bei dieser Artikel-/Farbvariante handelt es sich um ein Auslaufmodell, das nicht mehr gefertigt wird. Bitte wählen Sie eine andere Farbe/Größe oder ein anderes Modell.'
    
    $('.add-to-cart-button__container').html(
      '<h4>Nicht mehr verfügbar</h4>' +
      '<span>' + instructions + '</span>'
    );

    $('.product__availability-notice--discontinued').show();
    $('.product__availability-notice--out-of-stock').hide();
  }

  function showNotAvailableNotice() {
    var instructions = 'Der Artikel ist in der gewünschten Größe nicht verfügbar. Bitte wählen Sie eine andere Farbe/Größe oder ein anderes Modell.'
    
    $('.add-to-cart-button__container').html(
      '<h4>Nicht verfügbar</h4>' +
      '<span>' + instructions + '</span>'
    );

    $('.product__availability-notice--discontinued').show();
    $('.product__availability-notice--out-of-stock').hide();
  }


  // create restock notification
  function createRestockNotification() {
    var variant = $('.variant-select').val();
    // var product = $('.product-select').val();
    var product = $('.product-select__item--selected').data("product-id");
    var email = $('#customer-email').val();

    var notificationCallback = function(data) {
      var msg = '';
      if (data.status == 'OK') {
        msg = data.message; // just show the success message
      } else { // it was an error
        for (var k in data.errors) {  // collect all the error messages into a string
           msg += (data.errors[k].join());
         }
      }
      $('#restock-notification-message').html(msg);
    }

    BIS.create(email, variant, product).then(notificationCallback);
  }



  // gender-select event listener
  $('.gender-select').on('change', function() {
    var collection = this.value;

    getProducts(collection);
  });


  // product-select event listener
  $('.product-select__container').on('click', '.product-select__item', function(event) {
    event.preventDefault();
    // var product = this.value;
    var product = this.getAttribute('data-product-id');

    // toggle selected status
    $('.product-select__item--selected').removeClass('product-select__item--selected');
    $(this).addClass('product-select__item--selected');

    getVariants(product);
  });


  // variant-select event listener
  $('.variant-select').on('change', function() {
    updateProductData();
  });



  function updateProductData() {
    // var productID = $('.product-select').val();
    var productID = $('.product-select__item--selected').data("product-id");
    var variantID = $('.variant-select').val();

    client.fetchProduct(productID).then(function(product) {
      for (var i = 0; i < product.variants.length; i++) {
        if (product.variants[i].id == variantID) {
          var selectedVariant = product.variants[i];

          var unavailable = !selectedVariant.available
          var discontinued = discontinuedProducts.indexOf(product.title) != -1
          var deliveryDate = estimatedDeliveryDates[product.id]
          var outlet = product.attrs.product_type == "Outlet" ? true : false

          if (discontinued && unavailable) {
            showDiscontinuedNotice();
          }
          else if (unavailable && outlet) {
            showNotAvailableNotice();
          }
          else if (!discontinued && unavailable) {
            showRestockNotificationForm(deliveryDate);
          }
          else {
            showAddToCartButton();
          }
          updateVariantPrice(selectedVariant);
          updateProductImage(selectedVariant);
          updateTitle(product);
        }
      }
    });
  }











    /* Bind Event Listeners
    ============================================================ */
  function bindEventListeners() {
    
    // cart close button listener 
    $('.cart .cart__close-button').on('click', closeCart);

    // click away listener to close cart 
    $(document).on('click', function(evt) {
      if((!$(evt.target).closest('.cart').length) && (!$(evt.target).closest('.js-prevent-cart-listener').length)) {
        closeCart();
      }
    });

    // escape key handler 
    var ESCAPE_KEYCODE = 27;
    $(document).on('keydown', function (evt) {
      if (evt.which === ESCAPE_KEYCODE) {
        if (previousFocusItem) {
          $(previousFocusItem).focus();
          previousFocusItem = ''
        }
        closeCart();
      }
    });

    // checkout button click listener 
    $('.button--checkout').on('click', function () {
      window.open(cart.checkoutUrl, '_checkout');
    });

    // buy button click listener 
    $(document).on('click', '.buy-button', buyButtonClickHandler);

    // show restock form
    $(document).on('submit', '#restock-notification-form', function(event) {
      event.preventDefault();
      createRestockNotification();
    });

    // increment quantity click listener 
    $('.cart').on('click', '.quantity-increment', function () {
      var variantId = $(this).data('variant-id');
      incrementQuantity(variantId);
    });

    // decrement quantity click listener 
    $('.cart').on('click', '.quantity-decrement', function() {
      var variantId = $(this).data('variant-id');
      decrementQuantity(variantId);
    });

    // update quantity field listener 
    $('.cart').on('keyup', '.cart-item__quantity', debounce(fieldQuantityHandler, 250));

    // cart tab click listener 
    $('[data-action="toggle-cart"]').on('click', function() {
      setPreviousFocusItem(this);
      openCart();
    });
    
    // open product modal
    $('.collection').on('click', '.image-overlay, .variant-image, .product-details', function(){
      $(this).parents('.product').find('.product-modal').show();
      if (!$('.product-modal-underlay').length) {
        $('body').append('<div class = "product-modal-underlay"></div>');
      }
    });
    
    // close product modal
    $('body').on('click', '.product-modal-underlay, .product-modal-close', hideModal);
    //$('body').on('click', '.product-modal-underlay', hideModal);
  }
  
  /* Attach and control listeners onto buy button
    ============================================================ */
  function buyButtonClickHandler(evt) {
  
    evt.preventDefault();
    var productID = $(this).attr('data-product-id');
    var variantID = $(this).attr('data-variant-id'); 
    var cartLineItem = findCartItemByVariantId(variantID);
    var quantity = cartLineItem ? cartLineItem.quantity + 1 : 1;
    
    client.fetchProduct(productID).then(function(product) {
      for (var i = 0; i < product.variants.length; i++) {
        if (product.variants[i].id == variantID) {
          variantObject = product.variants[i];
          addOrUpdateVariant(cartLineItem, variantObject, quantity);
          setPreviousFocusItem(evt.target);
          $('#checkout').focus();
        }
      }
    });
  }

    /* Generate DOM elements for variant selectors
    ============================================================ */
  function generateSelectors(num, variants) {
    var options;

    for (var i = 0; i < variants.length; i++) {
      options += '<option value = "' + variants[i].id + '">' + variants[i].title + '</option>';
    }

    return  '<select name = "variant-selection" class = "product' + num + '">' + options + '</select>';
  }


    /* Variant option change handler
    ============================================================ */
  function attachOnVariantSelectListeners() {
    $('.collection').on('change', 'select[name=variant-selection]', function(event) {
      var element = $(this);
      var num = element.attr('class').replace("product", "");
      var productID = element.closest('.product').attr('data-product-id');
      var variantID = element.val();
      var variantName = element.find('option:selected').text();
      
      $('.add-button[data-product-id="'+ productID +'"]').attr('data-variant-id', variantID);
      
      client.fetchProduct(productID).then(function(product) {
        for (var i = 0; i < product.variants.length; i++) {
          if (product.variants[i].id == variantID) {
            var selectedVariant = product.variants[i];
            updateVariantImage(num, selectedVariant.image);
            updateVariantTitle(num, selectedVariant);
            updateVariantPrice(num, selectedVariant);
          }
        }
      });
    });
  }
  

  
  
  /*************************************************************/
  
  

  /* Update product title
  ============================================================ */
  function updateProductTitle(i, title) {
    $('#buy-button-'+i).find('.product-title').text(title);
  }

  /* Update product description
  ============================================================ */
  function updateProductDescription(i, description) {
    $('#buy-button-'+i).find('.product-description').html(description);
  }

  /* Update product image based on selected variant
  ============================================================ */
  function updateVariantImage(i, image) {
    var src = (image) ? image.src : ShopifyBuy.NO_IMAGE_URI;
    $('#buy-button-'+i).find('.variant-image').attr('src', src);
  }

  /* Update product variant title based on selected variant
  ============================================================ */
  function updateVariantTitle(i, variant) {
    $('#buy-button-'+i).find('.variant-title').text(variant.title);
  }

  /* Update product variant price based on selected variant
  ============================================================ */
  // function updateVariantPrice(i, variant) {
  //   $('#buy-button-'+i).find('.variant-price').text('$' + variant.price);
  // }

  /* Update product variant selectors 
  ============================================================ */
  function updateVariantSelectors(i, variantSelectors) {
    $('#buy-button-'+i).find('.variant-selectors').html(variantSelectors);
  }

  function updateBuyButton(productID, variant) {
    // console.log(productID);
    // console.log(variant);
    $('.add-button[data-product-id="'+ productID +'"]').data('variant-id', variant.id);
  }
  

  
  
  /*************************************************************/
  
  
  
  
  /* Decrease quantity amount by 1
  ============================================================ */
  function decrementQuantity(variantId) {
    updateQuantity(function(quantity) {
      return quantity - 1;
    }, variantId);
  }

  /* Increase quantity amount by 1
  ============================================================ */
  function incrementQuantity(variantId) {
    updateQuantity(function(quantity) {
      return quantity + 1;
    }, variantId);
  }

  /* Update product variant quantity in cart
  ============================================================ */
  function updateQuantity(fn, variantId) {
    var quantity;
    var cartLineItem = findCartItemByVariantId(variantId);
    if (cartLineItem) {
      quantity = fn(cartLineItem.quantity);
      updateVariantInCart(cartLineItem, quantity);
    }
  }

  /* Update product variant quantity in cart through input field
  ============================================================ */
  function fieldQuantityHandler(evt) {
    var variantId = parseInt($(this).closest('.cart-item').attr('data-variant-id'), 10);
    var cartLineItem = findCartItemByVariantId(variantId);
    var quantity = evt.target.value;
    if (cartLineItem) {
      updateVariantInCart(cartLineItem, quantity);
    }
  }

  /* Debounce taken from _.js
  ============================================================ */
  function debounce(func, wait, immediate) {
    var timeout;
    return function() {
      var context = this, args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
    }
  }


  
  
  /*************************************************************/



  /* Hide Modal 
  ============================================================ */
  function hideModal() {
    $('.product-modal').hide();
    $('.product-modal-underlay').remove();
  }
  
  
  /* Open Cart
  ============================================================ */
  function openCart() {
    $('body').removeClass('offcanvas');
    $('.cart').addClass('js-active');
  }

  /* Close Cart
  ============================================================ */
  function closeCart() {
    $('.cart').removeClass('js-active');
    $('.overlay').removeClass('js-active');
  }

  /* Find Cart Line Item By Variant Id
  ============================================================ */
  function findCartItemByVariantId(variantId) {
    return cart.lineItems.filter(function(item) {
      return (item.variant_id == variantId);
    })[0];
  }

    /* Determine action for variant adding/updating/removing
    ============================================================ */
  function addOrUpdateVariant(cartLineItem, variantObject, quantity) {
    openCart();
    var variantObjectID = variantObject.id;
    if (cartLineItem) {
      updateVariantInCart(cartLineItem, quantity);
    } else {
      addVariantToCart(variantObject, quantity);
    }
    updateCartTabButton();
  }

    /* Update details for item already in cart. Remove if necessary
    ============================================================ */
  function updateVariantInCart(cartLineItem, quantity) {
    var variantId = cartLineItem.variant_id;
    var cartLength = cart.lineItems.length;
    cart.updateLineItem(cartLineItem.id, quantity).then(function(updatedCart) {
      var $cartItem = $('.cart').find('.cart-item[data-variant-id="' + variantId + '"]');
      
      if (updatedCart.lineItems.length >= cartLength) {
          $cartItem.find('.cart-item__quantity').val(cartLineItem.quantity);
          $cartItem.find('.cart-item__price').text(formatAsMoney(cartLineItem.line_price));
      } else {
        $cartItem.addClass('js-hidden').bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function() {
           $cartItem.remove();
        });
      }

      updateCartTabButton();
      updateTotalCartPricing();
      
      if (updatedCart.lineItems.length < 1) {
        closeCart();
      }
    }).catch(function (errors) {
      console.log('Fail');
      console.error(errors);
    });
  }

    /* Add 'quantity' amount of product 'variant' to cart
    ============================================================ */
  function addVariantToCart(variantObject, quantity) {
    openCart();
    var lineItems = $('<div class = "lineItems"></div>');
    cart.createLineItemsFromVariants({ variant: variantObject, quantity: quantity }).then(function(cart) {
      for (var i = 0; i < cart.lineItems.length; i++) {
        lineItems.append(renderCartItem(cart.lineItems[i]));
      }

      var $cartItemContainer = $('.cart-item-container');
      $cartItemContainer.empty();
      $cartItemContainer.append(lineItems);
    }).catch(function (errors) {
      console.log('Fail');
      console.error(errors);
    });

    updateTotalCartPricing();
    updateCartTabButton();
  }
  
  /* Update cart tab button
  ============================================================ */
  function updateCartTabButton() {
    if (cart.lineItems.length > 0) {
      $('.cart__toggle .btn__counter').html('Warenkorb (' + cart.lineItemCount + ')');
      $('.cart__toggle').addClass('js-active');
    } else {
      $('.cart__toggle .btn__counter').html('Warenkorb');
      $('.cart__toggle').removeClass('js-active');
      $('.cart').removeClass('js-active');
    }
  }

    /* Return required markup for single item rendering
    ============================================================ */
  function renderCartItem(lineItem) {
    var lineItemEmptyTemplate = $('#CartItemTemplate').html();
    var $lineItemTemplate = $(lineItemEmptyTemplate);
    var itemImage = lineItem.image.src;
    
    $lineItemTemplate.attr('data-variant-id', lineItem.variant_id);
    $lineItemTemplate.addClass('js-hidden');
    $lineItemTemplate.find('.cart-item__img').css('background-image', 'url(' + itemImage + ')');
    $lineItemTemplate.find('.cart-item__title').text(lineItem.title);
    
    if (lineItem.variant_title != 'Default Title') {
      $lineItemTemplate.find('.cart-item__variant-title').text(lineItem.variant_title);
    }

    $lineItemTemplate.find('.cart-item__price').text(formatAsMoney(lineItem.line_price));
    $lineItemTemplate.find('.cart-item__quantity').attr('value', lineItem.quantity);
    $lineItemTemplate.find('.quantity-decrement').attr('data-variant-id', lineItem.variant_id);
    $lineItemTemplate.find('.quantity-increment').attr('data-variant-id', lineItem.variant_id);
    $lineItemTemplate.removeClass('js-hidden');

    return $lineItemTemplate;
  }

  /* Render the line items currently in the cart
    ============================================================ */
  function renderCartItems() {
    var $cartItemContainer = $('.cart-item-container');
    $cartItemContainer.empty();
    
    var lineItemEmptyTemplate = $('#CartItemTemplate').html();
    var $cartLineItems = cart.lineItems.map(function (lineItem, index) {
      return renderCartItem(lineItem);
    });
    
    $cartItemContainer.append($cartLineItems);

    setTimeout(function() {
      $cartItemContainer.find('.js-hidden').removeClass('js-hidden');
    }, 0);
    updateTotalCartPricing();
  }

  /* Update Total Cart Pricing
  ============================================================ */
  function updateTotalCartPricing() {
    $('.cart .pricing').text(formatAsMoney(cart.subtotal));
  }

  /* Format amount as currency
  ============================================================ */
  function formatAsMoney(amount, currency, thousandSeparator, decimalSeparator, localeDecimalSeparator) {
    currency = currency || '€ ';
    thousandSeparator = thousandSeparator || '.';
    decimalSeparator = decimalSeparator || ',';
    localeDecimalSeparator = localeDecimalSeparator || '.';
    var regex = new RegExp('(\\d)(?=(\\d{3})+\\.)', 'g');

    return currency + parseFloat(amount, 10).toFixed(2)
      .replace(localeDecimalSeparator, decimalSeparator)
      .replace(regex, '$1' + thousandSeparator)
    .toString();
  }

  /* Set previously focused item for escape handler
  ============================================================ */
  function setPreviousFocusItem(item) {
    previousFocusItem = item;
  }

});
